#La funciÃ³n print() sirve para mostrar cosas en pantalla. Es como decirle a Python: "Â¡Ey, muÃ©strame esto!"
print("Hola mundo")  # ClÃ¡sico.

# El parÃ¡metro *objects permite imprimir varios elementos a la vez, separados por comas.
nombre = "Marco"
edad = 99
print("Tu nombre es:", nombre, "y tu edad es:", edad)  # AquÃ­ *objects estÃ¡ imprimiendo 4 cosas, el primer mensaje, el contenido de nombre, el segundo mensaje y por Ãºltimo el contenido de edad.

# El parÃ¡metro sep define quÃ© separador usar entre los objetos.
print("Python", "es", "genial", sep="ğŸ”¥")  # Resultado: PythonğŸ”¥esğŸ”¥genial

# Por defecto, print() termina con un salto de lÃ­nea (\n), pero podemos cambiar eso con el parÃ¡metro end.
print("Esto estÃ¡ en la misma lÃ­nea", end=" ")  # No salta de lÃ­nea
print("Â¿Ves?")  # Se imprime justo despuÃ©s

# La funciÃ³n input() sirve para pedirle al usuario que escriba algo. Es como abrirle la puerta al teclado.
nombre_usuario = input("Â¿CÃ³mo te llamas? ")  # Lo que escribas se guarda como texto (str)
print("Hola", nombre_usuario)

# Tipos de datos en las entradas: todo lo que entra por input() es texto (string), aunque parezca nÃºmero.
edad_usuario = input("Â¿CuÃ¡ntos aÃ±os tienes? ")  # Aunque pongas 25, sigue siendo un str
print("Tipo de dato:", type(edad_usuario))  # Esto mostrarÃ¡: <class 'str'>

#Si quieres trabajar con nÃºmeros, hay que convertirlos.
edad_num = int(edad_usuario)  # Ahora sÃ­, es un entero (int)
print("En 5 aÃ±os tendrÃ¡s:", edad_num + 5)

# Tip extra: tambiÃ©n puedes usar float() para decimales, bool() para booleanos, etc.
altura = float(input("Â¿CuÃ¡nto mides en metros? "))  # Ejemplo: 1.75
print("Tu altura mÃ¡s 0.1m serÃ­a:", altura + 0.1)
